// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dicombrowser
std::list <std::string> dicombrowser(std::vector <unsigned char> dicomrawdata, DataFrame tagdico, unsigned int nbTAG, std::string stop_tag, unsigned int stop_level, bool full_info, bool verbose);
RcppExport SEXP _espadon_dicombrowser(SEXP dicomrawdataSEXP, SEXP tagdicoSEXP, SEXP nbTAGSEXP, SEXP stop_tagSEXP, SEXP stop_levelSEXP, SEXP full_infoSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector <unsigned char> >::type dicomrawdata(dicomrawdataSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type tagdico(tagdicoSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type nbTAG(nbTAGSEXP);
    Rcpp::traits::input_parameter< std::string >::type stop_tag(stop_tagSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type stop_level(stop_levelSEXP);
    Rcpp::traits::input_parameter< bool >::type full_info(full_infoSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(dicombrowser(dicomrawdata, tagdico, nbTAG, stop_tag, stop_level, full_info, verbose));
    return rcpp_result_gen;
END_RCPP
}
// labelbrowser
std::vector <unsigned int> labelbrowser(std::vector <bool> vol3D, std::vector  <unsigned int> n_ijk);
RcppExport SEXP _espadon_labelbrowser(SEXP vol3DSEXP, SEXP n_ijkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector <bool> >::type vol3D(vol3DSEXP);
    Rcpp::traits::input_parameter< std::vector  <unsigned int> >::type n_ijk(n_ijkSEXP);
    rcpp_result_gen = Rcpp::wrap(labelbrowser(vol3D, n_ijk));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_espadon_dicombrowser", (DL_FUNC) &_espadon_dicombrowser, 7},
    {"_espadon_labelbrowser", (DL_FUNC) &_espadon_labelbrowser, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_espadon(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
